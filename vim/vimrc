" (c) 2025 Dephilia
" MIT license (See LICENSE for details)
if !has('vim9script')
   echo "vim9script not supported, skipped."
   finish
endif

vim9script

g:mapleader = ","

#++++++++++++++++++#
#       MAP        #
#++++++++++++++++++#

# jj escape
inoremap <silent> jj <ESC>

# use arrow key
inoremap <C-j> <Down>
inoremap <C-k> <Up>
inoremap <C-h> <Left>
inoremap <C-l> <Right>

# tabline mapping
nnoremap <silent> <C-h> :bprevious<CR>
nnoremap <silent> <C-l> :bnext<CR>
nnoremap <silent> <leader><C-h> :tabprevious<CR>
nnoremap <silent> <leader><C-l> :tabnext<CR>

# Buffer mapping
nnoremap <silent> bl :ls<CR>
nnoremap <silent> bo :enew<CR>
nnoremap <silent> bn :bnext<CR>
nnoremap <silent> bp :bprevious<CR>
nnoremap <silent> bd :bdelete<CR>

# Auto add bracket
def ToggleBracketMode()
    if AutoBracketEnable
        iunmap { 
        iunmap {<Enter>
        iunmap (
        iunmap (<Enter>
        iunmap '
        iunmap "
        AutoBracketEnable = 0
        echo "Disable Auto Bracket"
    else
        imap { {}<Left>
        imap {<Enter> {}<Left><CR><ESC><S-o>
        imap ( ()<ESC>i
        imap (<Enter> ()<Left><CR><ESC><S-o>
        imap ' ''<LEFT>
        imap " ""<LEFT>
        AutoBracketEnable = 1
        echo "Enable Auto Bracket"
    endif
enddef

nnoremap <silent> <Leader>B :call ToggleBracketMode()<CR>
inoremap <silent> <Leader>B <ESC>:call ToggleBracketMode()<CR>

nnoremap <silent> <Leader><C-r> :so $MYVIMRC<CR>

# Clear Additional Space
command! -nargs=0 ClearSpaces :%s/\s\+$//e

# Copy to system clipboard
nnoremap <Leader>y "*y
nnoremap <Leader>p "*p
nnoremap <Leader>Y "+y
nnoremap <Leader>P "+p

# Copymode Toggle
command! CopyModeEnable :set norelativenumber nonumber nolist
command! CopyModeDisable :set relativenumber number list listchars=tab:→\ ,space:·,nbsp:␣,trail:•,eol:¶,precedes:«,extends:»

# Hex Mode
command! HexModeEnable :if executable('xxd') | set ft=xxd binary noeol | %!xxd | else | echo "xxd not installed." | endif
command! HexModeDisable :if executable('xxd') | %!xxd -r | set ft& eol | else | echo "xxd not installed." | endif

# Relative number hook
augroup numbertoggle
  autocmd!
  autocmd BufEnter,FocusGained,InsertLeave,WinEnter * if &nu && mode() != 'i' | set rnu | endif
  autocmd BufLeave,FocusLost,InsertEnter,WinLeave * if &nu | set nornu | endif
augroup END

# Set color scheme
if empty(glob('~/.vim/colors/snazzy.vim'))
  silent execute '!curl -fLo ~/.vim/colors/snazzy.vim --create-dirs https://raw.githubusercontent.com/connorholyday/vim-snazzy/master/colors/snazzy.vim'
endif

colorscheme snazzy
syntax enable

# Vim settings
set background=dark encoding=UTF-8 showtabline=2 laststatus=2 noshowmode
set cmdheight=1 autoindent smartindent incsearch ignorecase hlsearch relativenumber
set number cursorline hidden updatetime=300 shortmess+=c ttimeoutlen=5
set tags=./tags,./TAGS,tags;~,TAGS;~

# Tab settings
set noexpandtab tabstop=8 shiftwidth=4 softtabstop=-1

# Show hidden chars
set list listchars+=tab:→\ 
set list listchars+=space:·
set list listchars+=nbsp:␣
set list listchars+=trail:•
set list listchars+=eol:¶
set list listchars+=precedes:«
set list listchars+=extends:»

# Backspace handling
set backspace=indent,eol,start

# Folding
set foldenable foldlevel=99 fillchars+=fold:\ ,foldopen:,foldsep:\ ,foldclose:
hi CursorLine term=bold cterm=bold

# Tmux support
if exists("$TMUX")
  set t_Co=256 notermguicolors
else
  set termguicolors
endif
